#!/usr/bin/env python3
import argparse
import json
import sys

import loader
from board import *
from pfp_algorithm import *
from words import *

parser = argparse.ArgumentParser()
parser.add_argument("-f", help="File containing JSON encoded input", required=True)
parser.add_argument("-t", type=int, help="Time limit [ignored]", default=0)
parser.add_argument("-m", type=int, help="Memory limit [ignored]", default=0)
parser.add_argument("-c", type=int, help="Number of processor cores [ignored]", default=1)
parser.add_argument("-p", help="Phrase of power", action="append", default=[])

if __name__ == "__main__":
    args = parser.parse_args()
    phrases = PowerWords(*args.p)
    problems = None
    with open(args.f) as input:
        problems = json.load(input)
        if not isinstance(problems, list):
            problems = [problems]  # single problem?

    output = []
    for data in problems:
        p = loader.cleanse(data)
        for seed in p["sourceSeeds"]:
            board = Board(p["width"], p["height"], p["grid"], p["units"], seed=seed, sources_length=p["sourceLength"])
            alg = PfpAlgorithm(board, phrases)
            alg.start()
            output.append({
                "problemId": p["id"],
                "seed": seed,
                "solution": phrases.encode(board.get_solution())
            })

    json.dump(output, sys.stdout)
